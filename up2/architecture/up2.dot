digraph up2 {
   
    subgraph cluster_a {
        label="Execute"

        # Registers
        regs [label="<1> +1|<R0> R0|<R1> R1|<R2> R2|<dead> ?",shape=record];

        # Mux
        reg_in_mux [label="MUX",shape=circle]
        reg_out_mux_1 [label="MUX",shape=circle]
        reg_out_mux_2 [label="MUX",shape=circle]
    
        # Alu
        alu [label="ALU",shape=trapezium] 

        # Wiring
        reg_in_mux -> regs:R0    
        reg_in_mux -> regs:R1
        reg_in_mux -> regs:R2
        reg_in_mux -> regs:dead
        
        regs:R1 -> reg_out_mux_1
        regs:R2 -> reg_out_mux_1

        regs:1 -> reg_out_mux_2
        regs:R0 -> reg_out_mux_2
        
        reg_out_mux_2 -> alu
        reg_out_mux_1 -> alu

        alu -> reg_in_mux
       
        # Flags
        flags [label="<Z> Z|<O> O",shape=record];
        flag [label="Flag",shape=record];

    
        alu -> flags:Z
        alu -> flags:O

        alu_flag_mux [label="MUX",shape=circle]

        flags:Z -> alu_flag_mux
        flags:O -> alu_flag_mux

        alu_flag_mux -> flag

          
    }
         
    subgraph cluster_b {
        label="Register stack"  
        subgraph cluster_0 {
            label = "WIDTH = 12\nDEPTH = A";
            style=filled;
            color=lightgrey; 
            stack_mem[label="Reg container",shape=record] 
        }
        subgraph cluster_1 {
            label = "WIDTH = ceil(log2(A))";
            style=filled;
            color=lightgrey; 
            stack_ptr[label="DSP",shape=record] 
            stack_ptr_plus[label="+1",shape=circle] 
            stack_ptr_minus[label="-1",shape=circle] 
            stack_ptr_mux[label="MUX",shape=diamond]    
            stack_ptr -> stack_ptr_plus -> stack_ptr_mux
            stack_ptr -> stack_ptr_minus -> stack_ptr_mux
            stack_ptr_mux -> stack_ptr
        }
        stack_ptr -> stack_mem
    }


    subgraph cluster_c {
        label="Fetch (B >= 16)"
        subgraph cluster_0 {
            label = "WIDTH = ceil(log2(B))";
            style=filled;
            color=lightgrey; 
            pc[label="PC",shape=record]
            pc_plus_one[label="+1",shape=circle]
            pc_plus_two[label="+2",shape=circle]
            pc_plus_w[label="+W",shape=circle]
            pc_plus_int[label="I",shape=circle]
            pc_plus[label="+",shape=circle]
            pc_update_mux[label="MUX",shape=diamond]
            pc_add_mux[label="MUX",shape=diamond] 
            pc_plus_one -> pc_add_mux 
            pc_plus_two -> pc_add_mux
            pc_plus_w -> pc_add_mux
            pc_plus_int -> pc_add_mux
            pc_add_mux -> pc_plus -> pc_update_mux -> pc -> pc_plus 
        } 
        subgraph cluster_1 {
            label = "WIDTH = 4\nDEPTH = B";
            style=filled;
            color=lightgrey;  
            code_space[label="Code Space",shape=record]
        }
        subgraph cluster_2 {
            label = "WIDTH = 4";
            style=filled;
            color=lightgrey;  
            ir[label="IR",shape=record]
            mx[label="MX",shape=record]
        }  
        pc -> code_space[label="W"]
        code_space -> ir[label="4"]
        code_space -> pc_update_mux[label="W"]
        code_space -> mx[label="4"]
    }

    subgraph cluster_d {
        label="PC stack"  
        subgraph cluster_0 {
            label = "WIDTH = 12\nDEPTH = C";
            style=filled;
            color=lightgrey; 
            pc_mem[label="PC container",shape=record] 
        }
        subgraph cluster_1 {
            label = "WIDTH = ceil(log2(C))";
            style=filled;
            color=lightgrey; 
            pc_ptr[label="ASP",shape=record] 
            pc_ptr_plus[label="+1",shape=circle] 
            pc_ptr_minus[label="-1",shape=circle] 
            pc_ptr_mux[label="MUX",shape=diamond]    
            pc_ptr -> pc_ptr_plus -> pc_ptr_mux
            pc_ptr -> pc_ptr_minus -> pc_ptr_mux
            pc_ptr_mux -> pc_ptr
        }
        pc_ptr -> pc_mem
    }

    subgraph cluster_e {
        label="Main memory"  
        subgraph cluster_0 {
            label = "WIDTH = D";
            style=filled;
            color=lightgrey; 
            main_addr[label="Addr",shape=record] 
        }
        subgraph cluster_1 {
            label = "WIDTH = E";
            style=filled;
            color=lightgrey; 
            main_data[label="Data",shape=record] 
        }
        main_addr -> main_data
    }

    regs:R0 -> main_addr
    main_data -> regs:R0
}

